snippet react
	import React, { Component } from 'react'

	class ${1:`Filename()`} extends Component {
		render() {
			return (
				<div>
				</div>
			)
		}
	}
	export default $1
snippet reactf
	import React from 'react';

	import { Box } from 'styleguide';
	import { useTranslation } from '~/config';

	const ${0:`Filename()`} = () => {
		const { t } = useTranslation('common');

		return (
			<Box>
				${2}
			</Box>
		)
	}

	export default $0
snippet import
	import ${1} from '${2}';
snippet constructor
	constructor(props) {
	  super(props);

		${0}
	}
snippet rsc
	const ${1:`Filename()`} = (props) => (
		<div>
		</div>
	);
	export default $1;
snippet rc
	class ${1:`Filename()`} extends React.Component {
		render() {
			return (
				<div>
				</div>
			);
		}
	}
	export default $1;
snippet af
	(${1}) => ${2:null}
snippet fn
	(${1}) => {
		${2}
	}
snippet cfn
	const ${1:name} = (${2}) => {
		${3}
	};
snippet efn
	export const ${1:fn} = (${2}) => {
		return ${3}
	};
snippet reducer
	const initialState = () => ({
	});

	export default (state = initialState(), action) => {
		switch (action.type) {
			default:
				return state;
		}
	};
snippet describe
	describe('${1}', () => {
	});
snippet beforeEach
	beforeEach(() => {
		${1}
	});
snippet dispatch
	dispatch({
		type: ${1},
		payload: {
			${2}
		}
	});
snippet cwu
	componentWillUnmount() {
		${1}
	}
snippet cwrp
	componentWillReceiveProps() {
		${1}
	}
snippet connect
	connect((state, props) => ({
		${1}
	}), {
	})();
snippet bind
	this.${1:method} = this.$1.bind(this);
snippet Field
	<Field name="${1}" label="${2}" component={${0}} />
snippet Button
	<Button>${1}</Button>
snippet Link
	<Link to={${1}}>${0}</Link>
snippet Col
	<Col>${0}</Col>
snippet Row
	<Row>
	  ${0}
	</Row>
snippet Box
	<Box>
	  ${0}
	</Box>
snippet mstp
	mapStateToProps = (state) => {
		return { ${0} };
	}
snippet require
	const ${1:} = require('$1')
snippet ()
	() => {
	  ${1}
	}
snippet []
	const [${1:}, set$1] = useState(${2})
snippet iconnect
	import connect from 'react-redux'
snippet mapStateToProps
	const mapStateToProps = (state) => {
		return {
			${1}
		}
	}

	export default connect(mapStateToProps)(${2:`Filename()`})
snippet Card
	<Card>
	  <CardBody>
	  </CardBody>
	</Card>
snippet setTimeout
	setTimeout(() => , 500)
snippet map
	map((${1}) => {
			${0}
		})
snippet filter
	filter((${1}) => {
			${0}
		})
snippet getl
	import get from 'lodash/get';
snippet get
	get(${1}, '${2}')${3}
snippet function
	function ${1}(${2}) {
	  ${3}
	}
snippet pt
	${0:`Filename()`}.propTypes = {
		${2}: PropTypes.${3}
	}
snippet pti
	import PropTypes from 'prop-types'
snippet forEach
	forEach(${1} => ${0})
snippet useEffect
	useEffect(() => {
	  ${1}
	}, [${0}])
snippet Headline
	<Headline>${0}</Headline>
snippet fbc
	<Box variant='flex' flexDirection='column'>
	  ${0}
	</Box>
snippet fdc
	flexDirection='column'
snippet fb
	<Box variant='flex'>
	  ${0}
	</Box>
snippet jc
	justifyContent='center'
snippet ai
	alignItems='center'
snippet flex
	variant='flex'
snippet t
	t('${0}')
snippet styled
	const ${1} = styled.${0}``
snippet variant
	variant='${0}'
snippet useTranslation
	const { t } = useTranslation();
snippet class
	class ${1} {
		constructor(${2}) {
			${3}
		}
	}
